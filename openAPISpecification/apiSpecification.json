{
  "openapi": "3.0.2",
  "info": {
    "title": "GoURMET Translation API",
    "description": "Translation API produced as part of the GoURMET project this API exposes the translation models build.",
    "version": "1.0"
  },
  "servers": [{ "url": "https://translate-api.gourmet.newslabs.co/v1" }],
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": { "type": "string", "example": "Something went wrong" }
          }
        },
        "example": {
          "errors": ["Something went wrong"]
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "API Key is missing or invalid",
        "headers": {
          "WWW_Authenticate": {
            "schema": { "type": "string" }
          }
        },
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      }
    }
  },
  "paths": {
    "/languages": {
      "get": {
        "summary": "A list of all the language pairs it is possible to translate between.",
        "description": "A list of all the language pairs it is possible to translate between.",
        "security": [{ "ApiKeyAuth": [] }],
        "responses": {
          "200": {
            "description": "JSON Array of language pairs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "languagePairs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "source": { "type": "string", "example": "en" },
                          "target": { "type": "string", "example": "bg" }
                        }
                      }
                    }
                  },
                  "example": {
                    "languagePairs": [{ "source": "en", "target": "bg" }]
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "405": {
            "description": "Method not allowed this endpoint only supports POST requests.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "429": {
            "description": "To many requests access to this service is being throttled. Please wait and then try again.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "There is an unexpected error on the server side.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "502": {
            "description": "There is an invalid response from an upstream server.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "504": {
            "description": "Gateway timeout.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/translate": {
      "post": {
        "summary": "Translates a string of text in the source language into the target language",
        "description": "Takes a source language a target language and text to translate that is written in the source language. This text is translated into the target language. The source and target language must be a valid language pairing. All possible language pairs are available via the /languages endpoint.",
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "description": "The body must contain 'q': Text to translate, 'source': the 2-character (ISO 639-1 alpha-2 code) language code representing the source language (language to translate from), 'target': the 2-character (ISO 639-1 alpha-2 code) language code representing the source language (language to translate to). The available language pairs is visible via the /languages endpoint",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "q": {
                    "type": "string",
                    "example": "This is an example sentence"
                  },
                  "source": { "type": "string", "example": "en" },
                  "target": { "type": "string", "example": "bg" }
                }
              },
              "example": {
                "q": "This is an example sentence",
                "source": "en",
                "target": "bg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON object with the source and target language and the translated text.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "translatedText": {
                      "type": "string",
                      "example": "This is a translation"
                    },
                    "source": {
                      "type": "string",
                      "example": "bg"
                    },
                    "target": {
                      "type": "string",
                      "example": "en"
                    }
                  },
                  "example": {
                    "translatedText": "This is a translation",
                    "source": "bg",
                    "target": "en"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. User input is invalid. 'q', 'source', and 'target' must all be specified in the request body and the source and target must be a valid language pair as defined in the /languages endpoint.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "405": {
            "description": "Method not allowed this endpoint only supports POST requests.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "429": {
            "description": "To many requests access to this service is being throttled. Please wait and then try again.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "There is an unexpected error on the server side.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "502": {
            "description": "There is an invalid response from an upstream server.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "504": {
            "description": "Gateway timeout.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    }
  }
}
